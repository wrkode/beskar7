apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/name: beskar7
    app.kubernetes.io/version: v0.2.6
    control-plane: controller-manager
  name: beskar7-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: beskar7-system/beskar7-serving-cert
    controller-gen.kubebuilder.io/version: v0.18.0
  labels:
    app.kubernetes.io/name: beskar7
    app.kubernetes.io/version: v0.2.6
    cluster.x-k8s.io/contract: v1beta1
    cluster.x-k8s.io/provider: beskar7
  name: beskar7clusters.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: None
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: Beskar7Cluster
    listKind: Beskar7ClusterList
    plural: beskar7clusters
    shortNames:
    - b7c
    singular: beskar7cluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Cluster to which this Beskar7Cluster belongs
      jsonPath: .metadata.labels['cluster.x-k8s.io/cluster-name']
      name: Cluster
      type: string
    - description: Control Plane Endpoint Host
      jsonPath: .spec.controlPlaneEndpoint.host
      name: Endpoint
      type: string
    - description: Cluster infrastructure is ready for bootstrapping
      jsonPath: .status.ready
      name: Ready
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            properties:
              controlPlaneEndpoint:
                properties:
                  host:
                    maxLength: 512
                    type: string
                  port:
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      maxLength: 10240
                      minLength: 1
                      type: string
                    reason:
                      maxLength: 256
                      minLength: 1
                      type: string
                    severity:
                      maxLength: 32
                      type: string
                    status:
                      type: string
                    type:
                      maxLength: 256
                      minLength: 1
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              controlPlaneEndpoint:
                properties:
                  host:
                    maxLength: 512
                    type: string
                  port:
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
              failureDomains:
                additionalProperties:
                  properties:
                    attributes:
                      additionalProperties:
                        type: string
                      type: object
                    controlPlane:
                      type: boolean
                  type: object
                type: object
              ready:
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: beskar7-system/beskar7-serving-cert
    controller-gen.kubebuilder.io/version: v0.18.0
  labels:
    app.kubernetes.io/name: beskar7
    app.kubernetes.io/version: v0.2.6
    cluster.x-k8s.io/contract: v1beta1
    cluster.x-k8s.io/provider: beskar7
  name: beskar7machines.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: None
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: Beskar7Machine
    listKind: Beskar7MachineList
    plural: beskar7machines
    singular: beskar7machine
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Cluster to which this Beskar7Machine belongs
      jsonPath: .metadata.labels.cluster.x-k8s.io/cluster-name
      name: Cluster
      type: string
    - description: Current state of the Beskar7Machine
      jsonPath: .status.phase
      name: State
      type: string
    - description: Machine ready status
      jsonPath: .status.ready
      name: Ready
      type: string
    - description: Provider ID
      jsonPath: .spec.providerID
      name: ProviderID
      type: string
    - description: Machine object which owns this Beskar7Machine
      jsonPath: .metadata.ownerReferences[?(@.kind=='Machine')].name
      name: Machine
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            properties:
              configURL:
                type: string
              imageURL:
                type: string
              osFamily:
                enum:
                - kairos
                - talos
                - flatcar
                - LeapMicro
                type: string
              providerID:
                type: string
              provisioningMode:
                enum:
                - RemoteConfig
                - PreBakedISO
                type: string
            required:
            - imageURL
            - osFamily
            type: object
          status:
            properties:
              addresses:
                items:
                  properties:
                    address:
                      maxLength: 256
                      minLength: 1
                      type: string
                    type:
                      enum:
                      - Hostname
                      - ExternalIP
                      - InternalIP
                      - ExternalDNS
                      - InternalDNS
                      type: string
                  required:
                  - address
                  - type
                  type: object
                type: array
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      maxLength: 10240
                      minLength: 1
                      type: string
                    reason:
                      maxLength: 256
                      minLength: 1
                      type: string
                    severity:
                      maxLength: 32
                      type: string
                    status:
                      type: string
                    type:
                      maxLength: 256
                      minLength: 1
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                type: string
              failureReason:
                type: string
              phase:
                type: string
              ready:
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: beskar7-system/beskar7-serving-cert
    controller-gen.kubebuilder.io/version: v0.18.0
  labels:
    app.kubernetes.io/name: beskar7
    app.kubernetes.io/version: v0.2.6
    cluster.x-k8s.io/contract: v1beta1
    cluster.x-k8s.io/provider: beskar7
  name: beskar7machinetemplates.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: None
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: Beskar7MachineTemplate
    listKind: Beskar7MachineTemplateList
    plural: beskar7machinetemplates
    shortNames:
    - b7mt
    singular: beskar7machinetemplate
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            properties:
              template:
                properties:
                  spec:
                    properties:
                      configURL:
                        type: string
                      imageURL:
                        type: string
                      osFamily:
                        enum:
                        - kairos
                        - talos
                        - flatcar
                        - LeapMicro
                        type: string
                      providerID:
                        type: string
                      provisioningMode:
                        enum:
                        - RemoteConfig
                        - PreBakedISO
                        type: string
                    required:
                    - imageURL
                    - osFamily
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: beskar7-system/beskar7-serving-cert
    controller-gen.kubebuilder.io/version: v0.18.0
  labels:
    app.kubernetes.io/name: beskar7
    app.kubernetes.io/version: v0.2.6
    cluster.x-k8s.io/contract: v1beta1
    cluster.x-k8s.io/provider: beskar7
  name: physicalhosts.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: None
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: PhysicalHost
    listKind: PhysicalHostList
    plural: physicalhosts
    singular: physicalhost
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Current state of the Physical Host
      jsonPath: .status.state
      name: State
      type: string
    - description: Indicates if the host is ready
      jsonPath: .status.ready
      name: Ready
      type: boolean
    - description: Creation timestamp
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: PhysicalHost is the Schema for the physicalhosts API
        properties:
          apiVersion:
            description: APIVersion defines the versioned schema of this representation
              of an object.
            type: string
          kind:
            description: Kind is a string value representing the REST resource this
              object represents.
            type: string
          metadata:
            type: object
          spec:
            description: PhysicalHostSpec defines the desired state of PhysicalHost
            properties:
              bootIsoSource:
                description: BootISOSource is the URL of the ISO image to use for
                  provisioning
                type: string
              consumerRef:
                description: ConsumerRef is a reference to the Beskar7Machine that
                  is using this host
                properties:
                  apiVersion:
                    type: string
                  kind:
                    type: string
                  name:
                    type: string
                  namespace:
                    type: string
                  uid:
                    type: string
                type: object
              redfishConnection:
                description: RedfishConnection contains the connection details for
                  the Redfish endpoint
                properties:
                  address:
                    description: Address is the URL of the Redfish service
                    type: string
                  credentialsSecretRef:
                    description: CredentialsSecretRef is the name of the secret containing
                      the Redfish credentials
                    type: string
                required:
                - address
                - credentialsSecretRef
                type: object
              userDataSecretRef:
                description: UserDataSecretRef is a reference to a secret containing
                  cloud-init user data
                properties:
                  apiVersion:
                    type: string
                  kind:
                    type: string
                  name:
                    type: string
                  namespace:
                    type: string
                  uid:
                    type: string
                type: object
            required:
            - redfishConnection
            type: object
          status:
            description: PhysicalHostStatus defines the observed state of PhysicalHost
            properties:
              conditions:
                description: Conditions contains the different condition statuses
                  for this PhysicalHost
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown
                      type: string
                    type:
                      description: Type of condition in CamelCase
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              errorMessage:
                description: ErrorMessage contains details on the last error encountered
                type: string
              hardwareDetails:
                description: HardwareDetails contains information about the physical
                  host hardware
                properties:
                  firmware:
                    properties:
                      version:
                        type: string
                    type: object
                  manufacturer:
                    type: string
                  model:
                    type: string
                  serialNumber:
                    type: string
                type: object
              observedPowerState:
                description: ObservedPowerState is the last observed power state from
                  Redfish endpoint
                type: string
              ready:
                description: Ready indicates if the host is ready and enrolled
                type: boolean
              state:
                description: State represents the current state of the host
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: beskar7
    app.kubernetes.io/version: v0.2.6
  name: controller-manager
  namespace: beskar7-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/name: beskar7
    app.kubernetes.io/version: v0.2.6
  name: manager-role
  namespace: beskar7-system
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: beskar7
    app.kubernetes.io/version: v0.2.6
  name: manager-role
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch // Needed for Redfish credentials
  - watch // Needed for UserData
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  - clusters/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines
  - machines/status
  verbs:
  - get
  - list
  - watch // Needed to find control plane machine addresses
  - watch // Needed to interact with Machine object
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - beskar7clusters
  - beskar7machinetemplates
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - beskar7clusters/finalizers
  - beskar7machines/finalizers
  - beskar7machinetemplates/finalizers
  - physicalhosts/finalizers
  verbs:
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - beskar7clusters/status
  - beskar7machines/status
  - beskar7machinetemplates/status
  - physicalhosts/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - beskar7machines
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
  - watch // Needed to find machines created from this template
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - physicalhosts
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - patch // Needed to find and claim/patch PhysicalHost
  - update
  - watch
  - watch // Needed to discover failure domains
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: beskar7
    app.kubernetes.io/version: v0.2.6
  name: manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: manager-role
subjects:
- kind: ServiceAccount
  name: controller-manager
  namespace: beskar7-system
---
apiVersion: v1
data:
  policy.yaml: "# Beskar7 Security Policy\n# This policy defines security requirements
    and constraints for Beskar7 components\n\nsecurity:\n  # TLS Security Requirements\n
    \ tls:\n    # Enforce TLS certificate validation by default\n    enforce_certificate_validation:
    true\n    \n    # Allow insecureSkipVerify only in development environments\n
    \   allow_insecure_skip_verify: false\n    \n    # Minimum TLS version\n    min_tls_version:
    \"1.2\"\n    \n    # Certificate expiry warning thresholds\n    expiry_warning_days:
    30\n    expiry_critical_days: 7\n    \n    # Allowed certificate authorities\n
    \   trusted_cas:\n      - system # Use system CA bundle\n      # - custom-ca-secret
    # Custom CA from Kubernetes secret\n    \n    # Certificate validation requirements\n
    \   require_hostname_verification: true\n    require_valid_certificate_chain:
    true\n    \n  # RBAC Security Requirements\n  rbac:\n    # Principle of least
    privilege enforcement\n    enforce_least_privilege: true\n    \n    # Prohibited
    permissions (never allow these)\n    prohibited_permissions:\n      - apiGroups:
    [\"*\"]\n        resources: [\"*\"]\n        verbs: [\"*\"]\n      - apiGroups:
    [\"rbac.authorization.k8s.io\"]\n        resources: [\"*\"]\n        verbs: [\"*\"]\n
    \     - verbs: [\"impersonate\"]\n    \n    # Maximum allowed permissions for
    Beskar7 components\n    max_allowed_permissions:\n      beskar7-controller:\n
    \       - apiGroups: [\"infrastructure.cluster.x-k8s.io\"]\n          resources:
    [\"physicalhosts\", \"beskar7machines\", \"beskar7clusters\"]\n          verbs:
    [\"get\", \"list\", \"watch\", \"create\", \"update\", \"patch\", \"delete\"]\n
    \       - apiGroups: [\"infrastructure.cluster.x-k8s.io\"]\n          resources:
    [\"physicalhosts/status\", \"beskar7machines/status\", \"beskar7clusters/status\"]\n
    \         verbs: [\"get\", \"update\", \"patch\"]\n        - apiGroups: [\"cluster.x-k8s.io\"]\n
    \         resources: [\"clusters\", \"machines\"]\n          verbs: [\"get\",
    \"list\", \"watch\"]\n        - apiGroups: [\"\"]\n          resources: [\"secrets\"]\n
    \         verbs: [\"get\", \"list\", \"watch\"]\n        - apiGroups: [\"\"]\n
    \         resources: [\"events\"]\n          verbs: [\"create\", \"patch\"]\n
    \         \n  # Credential Security Requirements\n  credentials:\n    # Password
    requirements\n    password_policy:\n      min_length: 12\n      require_uppercase:
    true\n      require_lowercase: true\n      require_numbers: true\n      require_special_chars:
    true\n      prohibited_common_passwords: true\n      \n    # Credential rotation
    requirements\n    rotation_policy:\n      max_age_days: 90\n      warning_age_days:
    60\n      force_rotation_age_days: 365\n      \n    # Storage requirements\n    storage_policy:\n
    \     require_encryption_at_rest: true\n      require_kubernetes_secrets: true\n
    \     prohibit_plaintext_storage: true\n      \n    # Access requirements\n    access_policy:\n
    \     require_audit_logging: true\n      limit_access_principals: true\n      require_justification:
    true\n      \n  # Network Security Requirements\n  network:\n    # Default to
    secure communication\n    default_tls: true\n    \n    # Prohibited protocols\n
    \   prohibited_protocols:\n      - http\n      - telnet\n      - ftp\n      -
    snmp\n      \n    # Required encryption for BMC communication\n    bmc_encryption:
    true\n    \n    # Network policies\n    require_network_policies: true\n    deny_by_default:
    true\n    \n  # Container Security Requirements\n  container:\n    # Security
    context requirements\n    security_context:\n      run_as_non_root: true\n      read_only_root_filesystem:
    true\n      allow_privilege_escalation: false\n      drop_all_capabilities: true\n
    \     seccomp_profile: runtime/default\n      \n    # Image security requirements\n
    \   image_policy:\n      require_image_scanning: true\n      prohibit_latest_tag:
    true\n      require_signed_images: false # Set to true for production\n      allowed_registries:\n
    \       - \"docker.io\"\n        - \"gcr.io\"\n        - \"quay.io\"\n        \n
    \   # Resource limits (security through resource control)\n    resource_limits:\n
    \     enforce_resource_limits: true\n      default_cpu_limit: \"500m\"\n      default_memory_limit:
    \"512Mi\"\n      max_cpu_limit: \"2000m\"\n      max_memory_limit: \"4Gi\"\n      \n
    \ # Monitoring and Auditing Requirements\n  monitoring:\n    # Security event
    monitoring\n    security_monitoring:\n      enabled: true\n      scan_interval:
    \"1h\"\n      alert_on_critical: true\n      alert_on_high: true\n      \n    #
    Audit logging requirements\n    audit_logging:\n      enabled: true\n      log_failed_authentications:
    true\n      log_privilege_escalations: true\n      log_secret_access: true\n      log_rbac_changes:
    true\n      \n    # Metrics and alerting\n    metrics:\n      expose_security_metrics:
    true\n      alert_on_policy_violations: true\n      alert_on_certificate_expiry:
    true\n      alert_on_credential_age: true\n      \n  # Compliance Requirements\n
    \ compliance:\n    # Standards compliance\n    standards:\n      cis_kubernetes:
    true\n      nist_cybersecurity: true\n      pci_dss: false # Set to true if handling
    payment data\n      soc2: false # Set to true for SOC 2 compliance\n      \n    #
    Validation requirements\n    validation:\n      periodic_security_scans: true\n
    \     penetration_testing: false # Set to true for production\n      vulnerability_assessments:
    true\n      compliance_reporting: true\n      \n# Security exceptions (use sparingly
    and document thoroughly)\nexceptions:\n  # Development environment exceptions\n
    \ development:\n    allow_insecure_skip_verify: true\n    allow_self_signed_certificates:
    true\n    reduced_password_requirements: true\n    extended_credential_rotation:
    true\n    \n  # Testing environment exceptions  \n  testing:\n    allow_test_credentials:
    true\n    allow_mock_certificates: true\n    relaxed_rbac_validation: true\n    \n#
    Security tools integration\ntools:\n  # Static analysis tools\n  static_analysis:\n
    \   enabled: true\n    tools:\n      - gosec\n      - bandit\n      - semgrep\n
    \     \n  # Dynamic analysis tools\n  dynamic_analysis:\n    enabled: false #
    Enable for production\n    tools:\n      - owasp-zap\n      - burp-suite\n      \n
    \ # Container scanning tools\n  container_scanning:\n    enabled: true\n    tools:\n
    \     - trivy\n      - clair\n      - snyk\n      \n# Incident response procedures\nincident_response:\n
    \ # Security incident classification\n  severity_levels:\n    critical:\n      -
    credential_compromise\n      - privilege_escalation\n      - data_breach\n      -
    system_compromise\n    high:\n      - authentication_bypass\n      - unauthorized_access\n
    \     - certificate_compromise\n      - configuration_tampering\n    medium:\n
    \     - policy_violation\n      - weak_credentials\n      - expired_certificates\n
    \     - missing_patches\n    low:\n      - configuration_drift\n      - minor_policy_violations\n
    \     - informational_findings\n      \n  # Response procedures\n  procedures:\n
    \   automated_response:\n      - isolate_compromised_hosts\n      - revoke_compromised_credentials\n
    \     - alert_security_team\n      - generate_incident_report\n    manual_response:\n
    \     - investigate_incident\n      - contain_damage\n      - recover_systems\n
    \     - conduct_post_incident_review\n      \n# Security training and awareness\ntraining:\n
    \ requirements:\n    - security_awareness_training\n    - secure_coding_practices\n
    \   - incident_response_procedures\n    - compliance_requirements\n    \n  frequency:\n
    \   security_awareness: quarterly\n    technical_training: annually\n    compliance_training:
    annually "
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: security
    app.kubernetes.io/name: beskar7
    app.kubernetes.io/version: v0.2.6
  name: beskar7-security-policy
  namespace: beskar7-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: beskar7
    app.kubernetes.io/version: v0.2.6
    cluster.x-k8s.io/provider: beskar7
  name: beskar7-webhook-service
  namespace: beskar7-system
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    app.kubernetes.io/name: beskar7
    app.kubernetes.io/version: v0.2.6
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: beskar7
    app.kubernetes.io/version: v0.2.6
    control-plane: controller-manager
  name: controller-manager
  namespace: beskar7-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: beskar7
      app.kubernetes.io/version: v0.2.6
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        app.kubernetes.io/name: beskar7
        app.kubernetes.io/version: v0.2.6
        control-plane: controller-manager
    spec:
      automountServiceAccountToken: true
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.15.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        env:
        - name: GODEBUG
          value: netdns=go
        - name: RECONCILE_TIMEOUT
          value: 2m
        - name: STUCK_STATE_TIMEOUT
          value: 15m
        - name: MAX_RETRIES
          value: "3"
        - name: GOMAXPROCS
          valueFrom:
            resourceFieldRef:
              resource: limits.cpu
        image: ghcr.io/wrkode/beskar7/beskar7:v0.2.6
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 5
        name: manager
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        - containerPort: 8081
          name: healthz
          protocol: TCP
        - containerPort: 9443
          name: webhook
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 1000m
            ephemeral-storage: 2Gi
            memory: 1Gi
          requests:
            cpu: 200m
            ephemeral-storage: 100Mi
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: webhook-server-cert
          readOnly: true
        - mountPath: /tmp
          name: tmp
          readOnly: false
      dnsPolicy: ClusterFirst
      enableServiceLinks: false
      hostIPC: false
      hostNetwork: false
      hostPID: false
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 65532
        runAsGroup: 65532
        runAsNonRoot: true
        runAsUser: 65532
        seccompProfile:
          type: RuntimeDefault
        sysctls: []
      serviceAccountName: controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: webhook-server-cert
        secret:
          defaultMode: 256
          secretName: beskar7-webhook-server-cert
      - emptyDir:
          sizeLimit: 100Mi
        name: tmp
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    app.kubernetes.io/name: beskar7
    app.kubernetes.io/version: v0.2.6
  name: beskar7-serving-cert
  namespace: beskar7-system
spec:
  commonName: beskar7-webhook-service.beskar7-system.svc
  dnsNames:
  - beskar7-webhook-service.beskar7-system.svc
  duration: 8760h
  issuerRef:
    kind: ClusterIssuer
    name: beskar7-selfsigned-issuer
  renewBefore: 720h
  secretName: beskar7-webhook-server-cert
  subject:
    organizations:
    - beskar7
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  labels:
    app.kubernetes.io/name: beskar7
    app.kubernetes.io/version: v0.2.6
  name: beskar7-selfsigned-issuer
  namespace: beskar7-system
spec:
  selfSigned: {}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/component: security
    app.kubernetes.io/name: beskar7
    app.kubernetes.io/version: v0.2.6
  name: beskar7-allow-monitoring
  namespace: beskar7-system
spec:
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    - namespaceSelector:
        matchLabels:
          name: prometheus
    - namespaceSelector:
        matchLabels:
          name: observability
    - podSelector:
        matchLabels:
          app.kubernetes.io/component: security
          app.kubernetes.io/name: beskar7
          app.kubernetes.io/version: v0.2.6
    - podSelector:
        matchLabels:
          app: prometheus
          app.kubernetes.io/component: security
          app.kubernetes.io/name: beskar7
          app.kubernetes.io/version: v0.2.6
    ports:
    - port: 8080
      protocol: TCP
  podSelector:
    matchLabels:
      app.kubernetes.io/component: security
      app.kubernetes.io/name: beskar7
      app.kubernetes.io/version: v0.2.6
      control-plane: controller-manager
  policyTypes:
  - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/component: security
    app.kubernetes.io/name: beskar7
    app.kubernetes.io/version: v0.2.6
  name: beskar7-allow-namespace-communication
  namespace: beskar7-system
spec:
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: beskar7-system
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: beskar7-system
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/component: security
    app.kubernetes.io/name: beskar7
    app.kubernetes.io/version: v0.2.6
  name: beskar7-deny-all-default
  namespace: beskar7-system
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/component: security
    app.kubernetes.io/name: beskar7
    app.kubernetes.io/version: v0.2.6
  name: beskar7-manager-network-policy
  namespace: beskar7-system
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    - port: 53
      protocol: TCP
    to: []
  - ports:
    - port: 443
      protocol: TCP
    to:
    - namespaceSelector: {}
      podSelector:
        matchLabels:
          app.kubernetes.io/component: security
          app.kubernetes.io/name: beskar7
          app.kubernetes.io/version: v0.2.6
          component: kube-apiserver
  - ports:
    - port: 443
      protocol: TCP
    to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  - ports:
    - port: 443
      protocol: TCP
    - port: 8443
      protocol: TCP
    to: []
  - ports:
    - port: 389
      protocol: TCP
    - port: 636
      protocol: TCP
    - port: 3268
      protocol: TCP
    - port: 3269
      protocol: TCP
    to: []
  ingress:
  - from:
    - namespaceSelector: {}
      podSelector:
        matchLabels:
          app.kubernetes.io/component: security
          app.kubernetes.io/name: beskar7
          app.kubernetes.io/version: v0.2.6
          component: kube-apiserver
    ports:
    - port: 9443
      protocol: TCP
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - port: 8080
      protocol: TCP
  - from: []
    ports:
    - port: 8081
      protocol: TCP
  podSelector:
    matchLabels:
      app.kubernetes.io/component: security
      app.kubernetes.io/name: beskar7
      app.kubernetes.io/version: v0.2.6
      control-plane: controller-manager
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/component: security
    app.kubernetes.io/name: beskar7
    app.kubernetes.io/version: v0.2.6
  name: beskar7-security-monitoring
  namespace: beskar7-system
spec:
  egress:
  - ports:
    - port: 53
      protocol: UDP
    - port: 53
      protocol: TCP
    to: []
  - ports:
    - port: 443
      protocol: TCP
    to:
    - namespaceSelector: {}
      podSelector:
        matchLabels:
          app.kubernetes.io/component: security
          app.kubernetes.io/name: beskar7
          app.kubernetes.io/version: v0.2.6
          component: kube-apiserver
  - ports:
    - port: 443
      protocol: TCP
    - port: 8443
      protocol: TCP
    to: []
  - ports:
    - port: 9093
      protocol: TCP
    - port: 9094
      protocol: TCP
    to:
    - namespaceSelector:
        matchLabels:
          name: monitoring
  ingress:
  - from:
    - namespaceSelector: {}
      podSelector:
        matchLabels:
          app.kubernetes.io/component: security
          app.kubernetes.io/name: beskar7
          app.kubernetes.io/version: v0.2.6
          component: kube-apiserver
  podSelector:
    matchLabels:
      app.kubernetes.io/component: security
      app.kubernetes.io/name: beskar7
      app.kubernetes.io/version: v0.2.6
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: beskar7-system/beskar7-serving-cert
  labels:
    app.kubernetes.io/name: beskar7
    app.kubernetes.io/version: v0.2.6
  name: beskar7-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: beskar7-webhook-service
      namespace: beskar7-system
      path: /mutate-infrastructure-cluster-x-k8s-io-v1beta1-beskar7machine
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: defaulting.beskar7.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - beskar7machines
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: beskar7-webhook-service
      namespace: beskar7-system
      path: /mutate-infrastructure-cluster-x-k8s-io-v1beta1-physicalhost
  failurePolicy: Fail
  name: default.physicalhost.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - physicalhosts
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: beskar7-webhook-service
      namespace: beskar7-system
      path: /mutate-infrastructure-cluster-x-k8s-io-v1beta1-beskar7cluster
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: defaulting.beskar7cluster.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - beskar7clusters
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: beskar7-webhook-service
      namespace: beskar7-system
      path: /mutate-infrastructure-cluster-x-k8s-io-v1beta1-beskar7machinetemplate
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: defaulting.beskar7machinetemplate.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - beskar7machinetemplates
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: beskar7-system/beskar7-serving-cert
  labels:
    app.kubernetes.io/name: beskar7
    app.kubernetes.io/version: v0.2.6
  name: beskar7-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: beskar7-webhook-service
      namespace: beskar7-system
      path: /validate-infrastructure-cluster-x-k8s-io-v1beta1-beskar7machine
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.beskar7.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - beskar7machines
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: beskar7-webhook-service
      namespace: beskar7-system
      path: /validate-infrastructure-cluster-x-k8s-io-v1beta1-beskar7cluster
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.beskar7cluster.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - beskar7clusters
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: beskar7-webhook-service
      namespace: beskar7-system
      path: /validate-infrastructure-cluster-x-k8s-io-v1beta1-beskar7machinetemplate
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.beskar7machinetemplate.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - beskar7machinetemplates
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: beskar7-webhook-service
      namespace: beskar7-system
      path: /validate-infrastructure-cluster-x-k8s-io-v1beta1-physicalhost
  failurePolicy: Fail
  name: validation.physicalhost.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - physicalhosts
  sideEffects: None
