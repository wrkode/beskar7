apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: beskar7-system
  labels:
    control-plane: controller-manager
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 65532
        runAsGroup: 65532
        fsGroup: 65532
        seccompProfile:
          type: RuntimeDefault
        sysctls: []
      volumes:
      - name: webhook-server-cert
        secret:
          secretName: beskar7-webhook-server-cert
          defaultMode: 0400
      - name: tmp
        emptyDir:
          sizeLimit: 100Mi
      containers:
      - command:
        - /manager
        args:
        - --leader-elect
        - --enable-security-monitoring=true
        - --metrics-bind-address=:8080
        - --health-probe-bind-address=:8081
        image: ghcr.io/wrkode/beskar7/beskar7:v0.2.6
        imagePullPolicy: Always
        name: manager
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
          runAsGroup: 65532
          capabilities:
            drop:
              - "ALL"
          seccompProfile:
            type: RuntimeDefault
        env:
        - name: GODEBUG
          value: "netdns=go"
        - name: GOMAXPROCS
          valueFrom:
            resourceFieldRef:
              resource: limits.cpu
        volumeMounts:
        - name: webhook-server-cert
          mountPath: /tmp/k8s-webhook-server/serving-certs
          readOnly: true
        - name: tmp
          mountPath: /tmp
          readOnly: false
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        - containerPort: 8081
          name: healthz
          protocol: TCP
        - containerPort: 9443
          name: webhook
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 20
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
            ephemeral-storage: 2Gi
          requests:
            cpu: 200m
            memory: 256Mi
            ephemeral-storage: 100Mi
      serviceAccountName: controller-manager
      terminationGracePeriodSeconds: 10
      automountServiceAccountToken: true
      enableServiceLinks: false
      hostNetwork: false
      hostPID: false
      hostIPC: false
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      priorityClassName: system-cluster-critical 